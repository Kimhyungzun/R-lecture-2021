head(galton)
lm <- lm(Height~Father,data=galton)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t")
head(galton)
lm <- lm(Height~Father,data=galton)
galton <- read.table("https://www.randomservices.org/random/data/Galton.txt")
head(galton)
lm <- lm(Height~Father,data=galton)
lm <- lm(V5~V2,data=galton)
galton$names
galton$names =c('Family','Father','Mother','Gender','Height','Kids')
galton <- galton * 2.54
library(ggplot2)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t")
head(galton)
library(dplyr)
galton %>%
select(Gender=='M')
galton %>%
select(V4=='M')
galton %>%
filter(Gender=='M')
galton1 <- galton %>%
filter(Gender=='M')
galton1
str(galton)
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
filter(Gender=='M')
galton1
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height)
galton1
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height)
galton2 <- select(galton1, Father, Height)
lm <- lm(Height~Father,data=galton1)
summary(lm)
# 5. mutate - 새로운 변수 추가
mpg %>%
mutate(grade2=ifelse(mpg$total >= 30, 'A',
ifelse(mpg$total >= 20, 'B','C')))
# filter(행 추출), select(열 추출), arrange(오름차순 내림차순),
# group_by&summarize(그룹핑 후 연산), mutate
# %>% (체인연산자)
library(dplyr)
library(gapminder)
# 1. select - 원하는 열을 추출
select(gapminder, country, year, lifeExp)
select(gapminder, country, year, lifeExp) %>% head()
select(gapminder, country, year, lifeExp) %>% head(10)
# 2. filter - 원하는 행을 추출
filter(gapminder, country == 'Croatia' & year > 2000)
filter(gapminder, continent == 'Europe' & year == 2007)
# 1. select - 원하는 열을 추출
select(gapminder, country, year, lifeExp)
head(galton)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father, Height)
library(ggplot2)
library(dplyr)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father, Height)
galton1
galton1 <- galton %>%
filter(Gender=='M') %>%
select(galton,Father, Height)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(galton1,Father, Height)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(galton1,Father, Height)
galton1 <- galton %>%
select(Father, Height) %>%
filter(Gender=='M')
galton1 <- galton %>%
select(Father, Height) %>%
filter(Gender=='M')
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
select(Father, Height) %>%
filter(Gender=='M')
galton1
head(galton)
avocado %>%
filter(region == 'California' & year == 2018) %>%
select(region, Date, AveragePrice, Total.Volume, type)
# Avocado 사례
library(dplyr)
avocado <- read.csv('data/avocado.csv')
glimpse(avocado)
# 지역별 평균 판매량과 가격
avocado %>%
group_by(region) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
# 지역별 연도별 평균 판매량과 가격
avocado %>%
group_by(region, year) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
# 지역별 연도별 유기농여부에 따른 평균 판매량과 가격
avocado %>%
group_by(region, year, type) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
# 그룹 단위 통계
library(ggplot2)
x_avg <- filter(region != 'TotalUS') %>% ggplot(aes(year, Y_avg, col = type)) +
geom_line() + facet_wrap(~region)
avocado %>%
group_by(region, year, type) %>%
summarise(P_avg=mean(AveragePrice),V_avg=mean(Total.Volume)) %>%
filter(region != 'TotalUS') %>%
ggplot(aes(year,V_avg, col=type)) +
geom_line() +
facet_wrap(!region)
x_avg <- avocado %>%
group_by(region, year, type) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
arrange(x_avg, desc(V_avg)) %>% head(10)
x_avg <- x_avg %>%
filter(region != 'TotalUS')
arrange(x_avg, desc(V_avg)) %>% head(10)
avocado %>%
filter(region == 'California' & year == 2018) %>%
select(region, Date, AveragePrice, Total.Volume, type)
# 연도별이 아닌 월별 집계
library(lubridate)
year('2021-04-26')
month('2021-04-26')
day('2021-04-26')
wday('2021-04-26')
m_avg <- avocado %>%
group_by(region, year, month(Date), type) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
head(m_avg)
avocado %>%
filter(region == 'California' & year == 2018) %>%
select(region, Date, AveragePrice, Total.Volume, type)
dplyr::select()
library(ggplot2)
library(dplyr)
dplyr::select()
galton1 <- galton %>%
select(Father, Height) %>%
filter(Gender=='M')
galton1 <- galton %>%
select(Father, Height) %>%
filter(Gender=='M')
library(ggplot2)
library(dplyr)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
select(Father, Height) %>%
filter(Gender=='M')
galton1 <- galton %>%
filter(Gender=='M')
galton1
# filter(행 추출), select(열 추출), arrange(오름차순 내림차순),
# group_by&summarize(그룹핑 후 연산), mutate
# %>% (체인연산자)
library(dplyr)
library(gapminder)
# 1. select - 원하는 열을 추출
select(gapminder, country, year, lifeExp)
select(gapminder, country, year, lifeExp) %>% head()
select(gapminder, country, year, lifeExp) %>% head(10)
# 1. select - 원하는 열을 추출
select(gapminder, country, year, lifeExp)
select(gapminder, country, year, lifeExp) %>% head()
# filter(행 추출), select(열 추출), arrange(오름차순 내림차순),
# group_by&summarize(그룹핑 후 연산), mutate
# %>% (체인연산자)
library(dplyr)
library(gapminder)
# 1. select - 원하는 열을 추출
select(gapminder, country, year, lifeExp)
select(gapminder, country, year, lifeExp) %>% head()
select(gapminder, country, year, lifeExp) %>% head(10)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height)
library(ggplot2)
library(dplyr)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height)
galton1
galton1 %>%
mutate(father_w=height=Father*2.54) %>%
mutate(boy_height=Height*2.54)
galton1 %>%
mutate(father_w=height=galton1$Father*2.54) %>%
mutate(boy_height=galton1$Height*2.54)
galton1 %>%
mutate(father_w=height=galton1$Father*2.54)
galton1 %>%
mutate(father_w=height=galton1$Father*2.54)
galton1
galton1 %>%
mutate(father_height=galton1$Father*2.54)
galton1 %>%
mutate(father_height=galton1$Father*2.54) %>%
mutate(boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height) %>%
mutate(father_height=galton1$Father*2.54) %>%
mutate(boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
summary(lm)
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
abline(lm,col='red')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height) %>%
mutate(father_height=galton1$Father*2.54) %>%
mutate(boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
summary(lm)
# 아들키 = 0.448 * 아빠키 +97.178 [cm]
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
abline(lm,col='red')
library(dplyr)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height) %>%
mutate(father_height=galton1$Father*2.54) %>%
mutate(boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
summary(lm)
# 아들키 = 0.448 * 아빠키 +97.178 [cm]
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
abline(lm,col='red')
abline(lm,col='red')
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height) %>%
mutate(father_height=galton1$Father*2.54) %>%
mutate(boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
summary(lm)
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
abline(lm,col='red')
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height) %>%
mutate(father_height=galton1$Father*2.54) %>%
mutate(boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
summary(lm)
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count()
abline(lm,col='red')
abline(lm,col='red')
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
abline(lm,col='red')
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count()
library(ggplot2)
library(dplyr)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height) %>%
mutate(father_height=galton1$Father*2.54) %>%
mutate(boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
summary(lm)
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count()
abline(lm,col='red')
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_point()
library(dplyr)
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
coef(car_model)
# 단순 선형회귀의 적용
# Cars 데이터
str(cars)
plot(cars)
car_model <- lm(dist~speed, data=cars)
coef(car_model)
coef(lm)
galton1 <- galton %>%
filter(Gender=='M') %>%
mutate(father_height=galton1$Father*2.54) %>%
mutate(boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
coef(lm)
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
plot(child~parent,data=galton)
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_count() +
geom_smooth(method="lm")
galton1 <- galton %>%
filter(Gender=='M') %>%
mutate(father_height=galton1$Father*2.54,
boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
coef(lm)
# 분산 분석(anova)
anova(m.1,m.2,m.3,m.4)
# 단순 선형회귀의 적용
# Cars 데이터
str(cars)
plot(cars)
car_model <- lm(dist~speed, data=cars)
coef(car_model)
# 회귀식 : dist = 3.9324 * speed - 17.5791
abline(car_model,col='red')
summary(car_model)
par(mfrow=c(2,2))
plot(car_model)
# 속도 21.5 일때의 제동거리
nx1 <-data.frame(speed=c(21.5))
predict(car_model,nx1)
# 고차식(polynomial) 적용하면 어떻게 될까?
lm2 <- lm(dist~poly(speed,2),data=cars)
plot(cars)
x <- seq(4,25,length.out=211)
head(x)
y <- predict(lm2, data.frame(speed=x))
lines(x, y, col='purple', lwd=2)
abline(car_model, col='red')
summary(lm2)
# cars 1차식부터 4차식까지
x <- seq(4,25,length.out=211)
colors <- c('red','purple','darkorange','blue')
plot(cars)
for (i in 1:4) {
m <- lm(dist~poly(speed, i),data=cars)
assign(paste('m', i, sep='.'),m)
y <- predict(m,data.frame(speed=x))
lines(x,y,col=colors[i],lwd=2)
}
# 분산 분석(anova)
anova(m.1,m.2,m.3,m.4)
# 분산 분석(anova)
anova(m.1,m.2,m.3,m.4)
# Women data
women
# Women data
women
plot(women)
# Women data
women
plot(women)
m <- lm(weight ~ height, data=women)
abline(m, col='red')
abline(m, col='red', lwd=2)
summary(m)
# 2차식으로 모델링
m2 <- lm(weight ~ poly(height,2), data=women)
abline(m2, col='red', lwd=2)
summary(m2)
# 2차식으로 모델링
m2 <- lm(weight ~ poly(height,2), data=women)
x <- seq(58, 72, 300)
# 2차식으로 모델링
m2 <- lm(weight ~ poly(height,2), data=women)
x <- seq(58, 72, 300)
y <- predict(m2, data.frame(height=x))
plot(x, y, col='blue')
# 2차식으로 모델링
m2 <- lm(weight ~ poly(height,2), data=women)
x <- seq(58, 72, length.out = 300)
y <- predict(m2, data.frame(height=x))
plot(x, y, col='blue')
abline(m2, col='red', lwd=2)
summary(m2)
lines(x,y, col='blue', lwd=2)
summary(m2)
# 2차식으로 모델링
m2 <- lm(weight ~ poly(height,2), data=women)
x <- seq(58, 72, length.out = 300)
y <- predict(m2, data.frame(height=x))
# Women data
women
plot(women)
m <- lm(weight ~ height, data=women)
abline(m, col='red', lwd=2)
summary(m)
# 2차식으로 모델링
m2 <- lm(weight ~ poly(height,2), data=women)
x <- seq(58, 72, length.out = 300)
y <- predict(m2, data.frame(height=x))
lines(x,y, col='blue', lwd=2)
summary(m2)
coef(m2)
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_point(position= 'jitter', color = 'darkorange') +
geom_abline(intercept = coef(lm)[1], slope = coef(lm)[2],
color='blue',size=1)
library(ggplot2)
library(dplyr)
getwd()
galton <- read.table("C:/workspace/r/data/Galton.txt",sep="\t",header = T)
head(galton)
galton1 <- galton %>%
filter(Gender=='M') %>%
select(Father,Height)
galton1 <- galton %>%
filter(Gender=='M') %>%
mutate(father_height=galton1$Father*2.54,
boy_height=galton1$Height*2.54)
lm <- lm(boy_height ~ father_height,data=galton1)
coef(lm)
# 아들키 = 0.448 * 아빠키 +97.178 [cm]
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_point(position= 'jitter', color = 'darkorange') +
geom_abline(intercept = coef(lm)[1], slope = coef(lm)[2],
color='blue',size=1)
ggplot(data=galton1,aes(x=father_height,y=boy_height)) +
geom_point(position= 'jitter', color = 'red') +
geom_abline(intercept = coef(lm)[1], slope = coef(lm)[2],
color='blue',size=1)
lm <- lm(boy_height ~ father_height,data = galton1)
getwd()
set('\workspace\r')
# 일반화 선형 모델
# 로지스틱 회귀 - UCLA admission data
ucla <- read.csv('https://stats.idre.ucla.edu/stat/data/binary.csv')
str(ucla)
lr <- glm(admit ~ .,data=ucla, family=binomial)
coef(lr)
test <- data.frame(gre=c(376), gpa=c(3.6), rank=c(3))
predict(lr, test, type='response')
# ucla 데이터 셋 train/test data set으로 분할
train_index <- sample(1:nrow(ucla), 0.8*nrow(ucla))
# ucla 데이터 셋 train/test data set으로 분할
train_index <- sample(1:nrow(ucla), 0.8*nrow(ucla))
test_index <- setdiff(1:nrow(ucla), train_index)
ucla_train <- ucla[train_index,]
ucla_test <- ucla[test_index,]
dim(ucla_train)
dim(ucla_test)
nrow(ucla)
# 분할 비율은 적당한가?
table(ucla$admit)
table(ucla_train$admit)
# 훈련 데이터셋으로 학습, 테스트 데이터셋으로 예측
lr <- glm(admit~., ucla_train, family=binomial())
pred <- predict(lr, ucla_test, type='response')
pred
ucla_test$admit
