geom_abline(slope=0.5, intercept = 3,
color='cornflowerblue', size=1) +
labs(title='Dataset 1')
p1 <- ggplot(anscombe) +
geom_point(aes(x1,y1),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset 1')
install.packages('gridExtra')
library(gridExtra)
p1
p1 <- ggplot(anscombe) +
geom_point(aes(x1,y1),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset 1')
p1
# 그래프 그리기
library(ggplot2)
ggplot(anscombe) +
geom_point(aes(x1,y1),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(slope=0.5, intercept = 3,
color='cornflowerblue', size=1) +
labs(title='Dataset ')
p1 <- ggplot(anscombe) +
geom_point(aes(x1,y1),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset 1')
p1
p2 <- ggplot(anscombe) +
geom_point(aes(x1,y1),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset 2')
p2 <- ggplot(anscombe) +
geom_point(aes(x1,y1),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset 3')
p1 <- ggplot(anscombe) +
geom_point(aes(x1,y1),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset 1')
p1
p2 <- ggplot(anscombe) +
geom_point(aes(x2,y2),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset 2')
p3 <- ggplot(anscombe) +
geom_point(aes(x3,y3),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset 3')
p4 <- ggplot(anscombe) +
geom_point(aes(x4,y4),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset 4')
library(gridExtra)
grid.arrange(p1,p2,p3,p4, ncol=2, top="Anscom")
p4 <- ggplot(anscombe) +
geom_point(aes(x4,y4),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset i4')
p4
p4 <- ggplot(anscombe) +
geom_point(aes(x4,y4),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset i4')
p4
p4 <- ggplot(anscombe) +
geom_point(aes(x4,y4),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornfloweblue',size=1) +
labs(title='Dataset iiii')
p4
p1 <- ggplot(anscombe) +
geom_point(aes(x1,y1),color='darkorange',size=3) +
scale_x_continuous(breaks = seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title='Dataset 1')
p2 <- ggplot(anscombe) +
geom_point(aes(x2,y2),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title='Dataset 2')
p3 <- ggplot(anscombe) +
geom_point(aes(x3,y3),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title='Dataset 3')
p4 <- ggplot(anscombe) +
geom_point(aes(x4,y4),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title='Dataset ')
p4
library(gridExtra)
grid.arrange(p1,p2,p3,p4, ncol=2, top="Anscom")
grid.arrange(p1,p2,p3,p4, ncol=4, top="Anscom")
grid.arrange(p1,p2,p3,p4, ncol=2, top="Anscom")
p4 <- ggplot(anscombe) +
geom_point(aes(x4,y4),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title='Dataset 4')
library(gridExtra)
grid.arrange(p1,p2,p3,p4, ncol=2, top="Anscombe's Quartet")
figures <- list()
figures <- append(figures,p1)
figures <- append(figures,p1)
figures <- append(figures,p2)
figures <- append(figures,p3)
figures <- append(figures,p4)
figures[1]
# Source Refactoring
x <- ggplot(anscombe) +
geom_point(aes(x4,y4),color='darkorange',size=3)
x
m1 <- x
assign(paste('m', 4, sep='.'), x)
grid.arrange(p1,p2,p3,m.4, ncol=2, top="Anscombe's Quartet")
x <- ggplot(anscombe) +
geom_point(aes(anscombe[,i],anscombe[,i+4]),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title='Dataset 4', x='', y='')
for (i in 1:4) {
x <- ggplot(anscombe) +
geom_point(aes(anscombe[,i],anscombe[,i+4]),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title='Dataset 4', x='', y='')
}
x <- ggplot(anscombe) +
geom_point(aes(anscombe[,i],anscombe[,i+4]),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title=paste0('Dataset 4', i), x=paste0('x',i), y=paste0('y', i))
for (i in 1:4) {
x <- ggplot(anscombe) +
geom_point(aes(anscombe[,i],anscombe[,i+4]),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title=paste0('Dataset 4', i), x=paste0('x',i), y=paste0('y', i))
}
for (i in 1:4) {
x <- ggplot(anscombe) +
geom_point(aes(anscombe[,i],anscombe[,i+4]),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title=paste0('Dataset 4', i), x=paste0('x',i), y=paste0('y', i))
assign(paste('m', i, sep='.'), x)
}
grid.arrange(m.1,m.2,m.3,m.4, ncol=2, top="Anscombe's Quartet")
library(dplyr)
x <- ggplot(anscombe) +
geom_point(aes(anscombe[,i],anscombe[,i+4]),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title=paste0('Dataset', i), x=paste0('x',i), y=paste0('y', i)) +
assign(paste('m', i, sep='.'), x)
library(dplyr)
x <- ggplot(anscombe) +
geom_point(aes(anscombe[,i],anscombe[,i+4]),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title=paste0('Dataset', i), x=paste0('x',i), y=paste0('y', i)) +
assign(paste('m', i, sep='.'), x)
}
x <- ggplot(anscombe) +
geom_point(aes(anscombe[,i],anscombe[,i+4]),color='darkorange',size=3) +
scale_x_continuous(breaks=seq(2,20,2)) +
scale_y_continuous(breaks = seq(2,14,2)) +
xlim(2,20) +
ylim(2,14) +
geom_abline(intercept = 3,slope = 0.5,color='cornflowerblue',size=1) +
labs(title=paste0('Dataset', i), x=paste0('x',i), y=paste0('y', i)) +
assign(paste('m', i, sep='.'), x)
grid.arrange(m.1,m.2,m.3,m.4, ncol=2, top="Anscombe's Quartet")
knitr::opts_chunk$set(echo = TRUE)
library(gapminder)
library(ggplot2)
library(dplyr)
for (i in seq(1952,2007,by=5) ){
x <- gapminder %>%
filter(year==i) %>%
select(continent,pop) %>%
head()
barplot(x$pop, names.arg = x$continent)
}
pie(as.numeric(x$pop),x$continent)
install.packages('tidyr')
library(tidyr)
# 2-1
head(airquality)
air_tidy <- gather(airquality, key = 'Measure', value = 'Value',
-Day, -Month)
head(air_tidy)
# 2-1
head(airquality)
air_tidy <- gather(airquality, key = 'Measure', value = 'Value',
-Day, -Month) # key, value = 열 이름
head(air_tidy)
tail(air_tidy)
dim(airquality)
dim(air_tidy)
air_tidy %>%
ggplot(aes(Day,Value, col=Measure)) +
geom_point() +
facet_wrap(~Month)
# 2-2 iris
iris_tidy <- gather(iris, key ='feat', value = 'Value',
-Species)
head(iris_tidy)
tail(iris_tidy)
iris_tidy %>%
ggplot(aes(feat, value, col=Species)) +
geom_point(position = 'jitter')
# 2-2 iris
iris_tidy <- gather(iris, key ='feat', value = 'Value',
-Species)
head(iris_tidy)
tail(iris_tidy)
iris_tidy %>%
ggplot(aes(feat, value, col=Species)) +
geom_point(position = 'jitter')
iris_tidy %>%
ggplot(aes(feat, Value, col=Species)) +
geom_point(position = 'jitter')
# 3
library(gridExtra)
seto <- filter(iris, Species='setosa')
vers <- filter(iris, Species='versicolor')
virg <- filter(iris, Species=='virginica')
seto <- filter(iris, Species=='setosa')
vers <- filter(iris, Species=='versicolor')
virg <- filter(iris, Species=='virginica')
seto_s <- seto %>%
ggplot(aes(Sepal.Length,Sepal.Width,col=Species)) +
geom_point()
# 3
library(gridExtra)
seto <- filter(iris, Species=='setosa')
vers <- filter(iris, Species=='versicolor')
virg <- filter(iris, Species=='virginica')
seto_s <- seto %>%
ggplot(aes(Sepal.Length,Sepal.Width,col=Species)) +
geom_point()
seto_p <- seto %>%
ggplot(aes(Petal.Length,Petal.Width,col=Species)) +
geom_point()
vers_s <- vers %>%
ggplot(aes(Sepal.Length,Sepal.Width,col=Species)) +
geom_point()
vers_p <- vers %>%
ggplot(aes(Petal.Length,Petal.Width,col=Species)) +
geom_point()
virg_s <- virg %>%
ggplot(aes(Sepal.Length,Sepal.Width,col=Species)) +
geom_point()
virg_p <- virg %>%
ggplot(aes(Petal.Length,Petal.Width,col=Species)) +
geom_point()
grid.arrange(seto_s,seto_p,vers_s,vers_p,
virg_s,virg_p,ncol=2)
# 3-2
# barplot + legend
seto_mean <- apply(iris[iris$Species=='setosa',1:4],2,mean)
vers_mean <- apply(iris[iris$Species=='versicolor',1:4],2,mean)
virg_mean <- apply(iris[iris$Species=='virginica',1:4],2,mean)
mean_of_iris <- rbind(seto_mean, vers_mean, virg_mean)
mean_of_iris
barplot(mean_of_iris, beside=T,
main='품종별 평균', ylim=c(0,8), col=c('red','green','blue'))
legend('topright',
legend=c('Setosa','Versicolor','Virginica'),
fill=c('red','green','blue'))
barplot(mean_of_iris, beside=T,
main='품종별 평균', ylim=c(0,8), col=c('red','green','blue'))
legend('topright',
legend=c('Setosa','Versicolor','Virginica'),
fill=c('red','green','blue'))
mean_of_iris <- rbind(seto_mean, vers_mean, virg_mean)
mean_of_iris
barplot(mean_of_iris, beside=T,
main='품종별 평균', ylim=c(0,8), col=c('red','green','blue'))
legend('topright',
legend=c('Setosa','Versicolor','Virginica'),
fill=c('red','green','blue'))
barplot(mean_of_iris, beside=T,
main='품종별 평균', ylim=c(0,8), col=c('red','green','blue'))
legend('topright',
legend=c('Setosa','Versicolor','Virginica'),
fill=c('red','green','blue'))
# ggplot
df <- iris %>%
group_by(Species) %>%
summarise(sepal_length=mean(Sepal.Length), sepal_width=mean(Sepal.Width),
petal_length=mean(Petal.Length), petal_width=mean(Petal.Width))
df
df_tidy <- gather(df, key='Feature', value='Value', -Species)
df_tidy
ggplot(df_tidy, aes(x=Feature, y=Value, fill=Species)) +
geom_bar(stat='identity')
ggplot(df_tidy, aes(x=Feature, y=Value, col=Species)) +
geom_bar(stat='identity')
ggplot(df_tidy, aes(x=Feature, y=Value, fill=Species)) +
geom_bar(stat='identity', position='dodge')
ggplot(df_tidy, aes(x=Feature, y=Value, fill=Species)) +
geom_bar(stat='identity', position='dodge')
ggplot(df_tidy, aes(x=Feature, y=Value, fill=Species)) +
geom_bar(stat='identity')
ggplot(df_tidy, aes(x=Feature, y=Value, col=Species)) +
geom_bar(stat='identity')
ggplot(df_tidy, aes(x=Feature, y=Value, fill=Species)) +
geom_bar(stat='identity', position='dodge')
ggplot(df_tidy, aes(x=Feature, y=Value, fill=Species)) +
geom_bar(stat='identity')
ggplot(df_tidy, aes(x=Feature, y=Value, fill=Species)) +
geom_bar(stat='identity', position='dodge')
boxplot(seto$Sepal.Length, seto$Sepal.Width,
seto$Petal.Length, seto$Petal.Width,
col=c('red','yellow','green','blue'),
names=c('Sepal.Length','Sepal.Width','Petal.Length','Petal.Width'),
main='Setosa')
boxplot(vers$Sepal.Length, vers$Sepal.Width,
vers$Petal.Length, vers$Petal.Width,
col=c('red','yellow','green','blue'),
names=c('Sepal.Length','Sepal.Width','Petal.Length','Petal.Width'),
main='Versicolor')
boxplot(virg$Sepal.Length, virg$Sepal.Width,
virg$Petal.Length, virg$Petal.Width,
col=c('red','yellow','green','blue'),
names=c('Sepal.Length','Sepal.Width','Petal.Length','Petal.Width'),
main='Virginica')
par(mfrow=c(1,1))
par(mfrow=c(1,1))
par(mfrow=c(3,1))       # 3행 1열의 그래프
boxplot(seto$Sepal.Length, seto$Sepal.Width,
seto$Petal.Length, seto$Petal.Width,
col=c('red','yellow','green','blue'),
names=c('Sepal.Length','Sepal.Width','Petal.Length','Petal.Width'),
main='Setosa')
boxplot(vers$Sepal.Length, vers$Sepal.Width,
vers$Petal.Length, vers$Petal.Width,
col=c('red','yellow','green','blue'),
names=c('Sepal.Length','Sepal.Width','Petal.Length','Petal.Width'),
main='Versicolor')
boxplot(virg$Sepal.Length, virg$Sepal.Width,
virg$Petal.Length, virg$Petal.Width,
col=c('red','yellow','green','blue'),
names=c('Sepal.Length','Sepal.Width','Petal.Length','Petal.Width'),
main='Virginica')
par(mfrow=c(1,1))
# ggplot
seto_tidy <- gather(seto, key='Feature', value='Value', -Species)
head(seto_tidy)
s1 <- seto_tidy %>%
ggplot(aes(x=Feature,y=Value)) +
geom_boxplot() +
ggtitle('Setosa')
s1
# ggplot
seto_tidy <- gather(seto, key='Feature', value='Value', -Species)
head(seto_tidy)
s1 <- seto_tidy %>%
ggplot(aes(x=Feature,y=Value)) +
geom_boxplot() +
ggtitle('Setosa')
s1
virg_tidy <- gather(virg, key='Feature', value='Value', -Species)
s2 <- vers_tidy %>%
ggplot(aes(x=Feature,y=Value)) +
geom_boxplot() +
ggtitle('Versicolor')
s3 <- virg_tidy %>%
ggplot(aes(x=Feature,y=Value)) +
geom_boxplot() +
ggtitle('Virginica')
grid.arrange(s1,s2,s3, ncol=1)
grid.arrange(s1,s2,s3, ncol=1)
s2 <- vers_tidy %>%
ggplot(aes(x=Feature,y=Value)) +
geom_boxplot() +
ggtitle('Versicolor')
s3 <- virg_tidy %>%
ggplot(aes(x=Feature,y=Value)) +
geom_boxplot() +
ggtitle('Virginica')
grid.arrange(s1,s2,s3, ncol=1)
# ggplot
seto_tidy <- gather(seto, key='Feature', value='Value', -Species)
head(seto_tidy)
s1 <- seto_tidy %>%
ggplot(aes(x=Feature,y=Value)) +
geom_boxplot() +
ggtitle('Setosa')
s1
vers_tidy <- gather(vers, key='Feature', value='Value', -Species)
virg_tidy <- gather(virg, key='Feature', value='Value', -Species)
s2 <- vers_tidy %>%
ggplot(aes(x=Feature,y=Value)) +
geom_boxplot() +
ggtitle('Versicolor')
s3 <- virg_tidy %>%
ggplot(aes(x=Feature,y=Value)) +
geom_boxplot() +
ggtitle('Virginica')
grid.arrange(s1,s2,s3, ncol=1)
s3 <- virg_tidy %>%
ggplot(aes(x=Feature,y=Value, col=Feature)) +
geom_boxplot() +
ggtitle('Virginica')
grid.arrange(s1,s2,s3, ncol=1)
s1 <- seto_tidy %>%
ggplot(aes(x=Feature,y=Value, col=Feature)) +
geom_boxplot() +
ggtitle('Setosa')
s1
vers_tidy <- gather(vers, key='Feature', value='Value', -Species)
virg_tidy <- gather(virg, key='Feature', value='Value', -Species)
s2 <- vers_tidy %>%
ggplot(aes(x=Feature,y=Value, col=Feature)) +
geom_boxplot() +
ggtitle('Versicolor')
s3 <- virg_tidy %>%
ggplot(aes(x=Feature,y=Value, col=Feature)) +
geom_boxplot() +
ggtitle('Virginica')
grid.arrange(s1,s2,s3, ncol=1)
