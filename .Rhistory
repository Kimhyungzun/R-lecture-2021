table(mpg$grade)
# 평균연비가 30이상이면 A등급, 20이상이면 B등급, 아니면 C등급
mpg$grade <- ifelse(mpg$total >= 30,'A',
ifelse(mpg$total >= 20,'B','C'))
# mutate
mpg %>%
mutate(grade2=ifelse(mpg$total >= 30, 'A',
ifelse(mpg$total >= 20, 'B','C')))
# mutate
mpg %>%
mutate(grade2=ifelse(mpg$total >= 30, 'A',
ifelse(mpg$total >= 20, 'B','C')))
mpg <- mpg %>%
mutate(grade2=ifelse(mpg$total >= 30, 'A',
ifelse(mpg$total >= 20, 'B','C')))
table(mpg$grde2)
table(mpg$grade2)
africa_pop <- filter(gapminder, continent =='Africa' & year == 2007)
arrange(africa_pop, desc(lifeExp)) %>% head(5)
# 4. group_by 와 summarize
summarize(africa_pop, pop_avg = mean(pop)) # 2007년 아프리카 국가별 평균 인구수
summarize(group_by(gapminder, continent, pop_avg=mean(pop)))
summarise(group_by(gapminder, country),life_avg=mean(lifeExp))
mpg %>%
filter(manufacturer %in% c('audi', 'toyota')) %>%
group_by(manufacturer) %>%
summarize(avg_cty=mean(cty))
mpg %>%
+     filter(manufacturer %in% c('audi', 'toyota')) %>%
+     group_by(manufacturer) %>%
+     summarize(avg_cty=mean(cty)) %>%
arrange(desc(avg_cty))
mpg %>%
+          filter(manufacturer %in% c('audi', 'toyota')) %>%
+          group_by(manufacturer) %>%
+          summarize(avg_cty=mean(cty)) %>%
+         arrange(desc(avg_cty))
gapminder %>%
filter(continent="Asia") %>%
group_by(country) %>%
summarise(life_avg=mean(lifeExp)) %>%
arrange(desc(life_avg)) %>%
head(5)
# Avocado 사례
library(dplyr)
avocado <- read.csv('data/avocado.csv')
glimpse(avocado)
# 지역별 평균 판매량과 가격
avocado %>%
group_by(region) %>%
summarise(P_avg=mean(AveragePrice, V_avg=mean(Total.Volume)))
# 지역별 평균 판매량과 가격
avocado %>%
group_by(region) %>%
summarise(P_avg=mean(AveragePrice, V_avg=mean(Total.Volume)))
# 지역별 평균 판매량과 가격
avocado %>%
group_by(region) %>%
summarise(P_avg=mean(AveragePrice, V_avg=mean(Total.Volume)))
# 지역별 평균 판매량과 가격
avocado %>%
group_by(region) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume)))
# 지역별 평균 판매량과 가격
avocado %>%
group_by(region) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume)))
# 지역별 평균 판매량과 가격
avocado %>%
group_by(region) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
# 지역별 연도별 평균 판매량과 가격
avocado %>%
group_by(region, year) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
# 지역별 연도별 유기농여부에 따른 평균 판매량과 가격
avocado %>%
group_by(region, year, type) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
# 그룹 단위 통계
library(ggplot2)
# 그룹 단위 통계
library(ggplot2)
x_avg <- filter(region != 'TotalUS') %>% ggplot(aes(year, Y_avg, col = type)) +
geom_line() + facet_wrap(~region)
avocado %>%
group_by(region, year, type) %>%
summarise(P_avg=mean(AveragePrice),V_avg=mean(Total.Volume)) %>%
filter(region != 'TotalUS') %>%
ggplot(aes(year,V_avg, col=type)) +
geom_line() +
facet_wrap(!region)
# 그룹 단위 통계
library(ggplot2)
x_avg <- filter(region != 'TotalUS') %>% ggplot(aes(year, Y_avg, col = type)) +
geom_line() + facet_wrap(~region)
avocado %>%
group_by(region, year, type) %>%
summarise(P_avg=mean(AveragePrice),V_avg=mean(Total.Volume)) %>%
filter(region != 'TotalUS') %>%
ggplot(aes(year,V_avg, col=type)) +
geom_line() +
facet_wrap(!region)
x_avg <- avocado %>%
group_by(region, year, type) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
x_avg <- avocado %>%
group_by(region, year, type) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
arrange(x_avg, desc(V_avg)) %>% head(10)
arrange(x_avg, desc(V_avg)) %>% head(10)
x_avg <- x_avg %>%
filter(region != 'TotalUS')
arrange(x_avg, desc(V_avg)) %>% head(10)
avocado %>%
filter(region == 'California' & year == 2018)
avocado %>%
filter(region == 'California' & year == 2018) %>%
select(region, Date, AveragePrice, Total.Volume, )
avocado %>%
filter(region == 'California' & year == 2018) %>%
select(region, Date, AveragePrice, Total.Volume, type)
install.packages('lubridate')
# 연도별이 아닌 월별 집계
library(lubridate)
head(lubridate)
year('2021-04-26')
day('2021-04-26')
wday('2021-04-26')
m_avg <- avocado %>%
group_by(region, year, month(Date), type) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
head(m_avg)
m_avg <- avocado %>%
group_by(region, year, month(Date), type) %>%
summarise(P_avg=mean(AveragePrice), V_avg=mean(Total.Volume))
head(m_avg)
# 모델링을 위한 가공
library(dplyr)
# Wine 데이터
wine <- read.table('data/wine.data.txt')
# Wine 데이터
wine <- read.table('data/wine.data.txt', sep=',')
head(wine)
name <- readLines('data/wine.name.txt')
names
names <- readLines('data/wine.name.txt')
names
columns <- readLines('data/wine.name.txt')
columns
# wine 데이터의 column명
names(wine)
names(wine)[2:14] <- columns
names(wine)
names(wine)[2:14] <- columns
names(wine)
length(a)
# substr 함수
a <- "A quick brown fox jumps over the lazy dog"
length(a)
nchar(a)
substr(a, 3, 7)
# substr 함수
a <- "A quick brown fox jumps over the lazy dog."
nchar(a)
substr(a, 3, 7)
subset(a, nchar(a)-3, nchar(a)-1)
# substr 함수
a <- "A quick brown fox jumps over the lazy dog."
nchar(a)
substr(a, 3, 7)
subset(a, nchar(a)-3, nchar(a)-1)
substr(a, nchar(a)-3, nchar(a)-1)
names(wine)[2:14] <- substr(columns,4,nchar(columns))
names(wine)[1] <- 'Y'
names(wine)
# 데이터셋 분할
train_set = sample_frac(wine, 0.75)
str(train_set)
table(wine$Y)
table(train_set$Y)
test_set = setdiff(wine, train_set)
table(test_set$Y)
# 데이터셋 분할
train_set = sample_frac(wine, 0.75)
str(train_set)
table(wine$Y)
table(train_set$Y)
test_set = setdiff(wine, train_set)
table(test_set$Y)
knitr::opts_chunk$set(echo = TRUE)
mpg
mpg1 <- filter(displ <= 4) %>%
summarise(hwy_avg=mean(hwy))
```{r setup, include=FALSE}
mpg1 <- mpg %>% filter(displ <= 4) %>%
summarise(hwy_avg=mean(hwy))
mpg1
mpg2
mpg2 <- mpg %>% filter(displ >= 5) %>%
summarise(hwy_avg=mean(hwy))
mpg1
mpg2
mpg1
mpg2 #
```{r setup, include=FALSE}
```{r}
```{r setup, include=FALSE}
mpg1 <- mpg %>% filter(displ <= 4) %>%
summarise(hwy_avg=mean(hwy))
mpg2 <- mpg %>% filter(displ >= 5) %>%
summarise(hwy_avg=mean(hwy))
mpg1 #25.96319
mpg2 #18.07895
mpg1 <- mpg %>% filter(displ <= 4) %>%
summarise(hwy_avg=mean(hwy))
mpg2 <- mpg %>% filter(displ >= 5) %>%
summarise(hwy_avg=mean(hwy))
mpg1 #25.96319
mpg2 #18.07895
library(dplyr)
mpg1 <- mpg %>% filter(displ <= 4) %>%
summarise(hwy_avg=mean(hwy))
mpg2 <- mpg %>% filter(displ >= 5) %>%
summarise(hwy_avg=mean(hwy))
mpg1 #25.96319
mpg2 #18.07895
library(mpg)
library(mpg)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
a <- mpg %>%
a
a <- mpg %>%
summarise(cty_avg=mean(cty)
a <- mpg %>%
a <- mpg %>%
filter(manufacturer == 'audi' | manufacturer == 'toyota') %>%
summarise(cty_avg=mean(cty))
a
a <- mpg %>%
group_by(manufacturer) %>%
summarise(cty_avg=mean(cty))
a
mpg2 <- mpg %>%
group_by(manufacturer) %>%
summarise(cty_avg=mean(cty)) %>%
filter(manufacturer=='audi'|manufacturer=='toyota')
mpg2
```{r setup, include=FALSE}
2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 합니다.
"audi"와 "toyota" 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비)가
평균적으로 더 높은지 알아보세요.
```{r}
mpg3 <- mpg %>%
group_by(manufacturer) %>%
summarise(cty_avg=mean(cty)) %>%
filter(manufacturer=='audi'|manufacturer=='toyota')
mpg3
# toyota
```
3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이 회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요.
```{r}
mpg3
```
mpg4 <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda') %>%
summarise(hwy_avg=mean(hwy)) %>%
mpg4
2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 합니다.
"audi"와 "toyota" 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비)가
평균적으로 더 높은지 알아보세요.
```{r}
mpg3 <- mpg %>%
group_by(manufacturer) %>%
summarise(cty_avg=mean(cty)) %>%
filter(manufacturer=='audi'|manufacturer=='toyota')
mpg3
# toyota
```
3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이 회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요.
```{r}
mpg4 <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda') %>%
summarise(hwy_avg=mean(hwy)) %>%
mpg4
```
mpg4 <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda') %>%
summarise(hwy_avg=mean(hwy)) %>%
mpg4
mpg4 <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda') %>%
summarise(hwy_avg=mean(hwy))
mpg4
head(mpg)
mpg5 <- mpg %>%
select(class,cty)
mpg5
head(mpg5)
mpg5 %>% group_by(class='compact'|class=='suv)
mpg5 %>%
group_by(class='compact'|class=='suv')
mpg5 %>%
group_by(class='compact'|class=='suv')
mpg5 %>%
group_by(class) %>%
filter(class=='suv'|class=='compact') %>%
mpg5
mpg5 %>%
group_by(class) %>%
filter(class=='suv'|class=='compact') %>%
mpg6 <- mpg5 %>%
group_by(class) %>%
filter(class=='suv'|class=='compact') %>%
mpg6 <- mpg5 %>%
group_by(class) %>%
filter(class=='suv'|class=='compact') %>%
mpg6
mpg6 <- mpg5 %>%
group_by(class) %>%
filter(class=='suv'|class=='compact') %>%
mpg6
mpg6 <- mpg5 %>%
filter(class=='suv'|class=='compact') %>%
summarise(group_by(class), cty_avg=mean(cty))
mpg6
2. 자동차 제조 회사에 따라 도시 연비가 다른지 알아보려고 합니다.
"audi"와 "toyota" 중 어느 manufacturer(자동차 제조 회사)의 cty(도시 연비)가
평균적으로 더 높은지 알아보세요.
```{r}
mpg3 <- mpg %>%
group_by(manufacturer) %>%
summarise(cty_avg=mean(cty)) %>%
filter(manufacturer=='audi'|manufacturer=='toyota')
mpg3
# toyota
```
3. "chevrolet", "ford", "honda" 자동차의 고속도로 연비 평균을 알아보려고 합니다. 이 회사들의 자동차를 추출한 뒤 hwy 전체 평균을 구해보세요.
```{r}
mpg4 <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda') %>%
summarise(hwy_avg=mean(hwy))
mpg4
```
4. mpg 데이터는 11개 변수로 구성되어 있습니다. 이 중 일부만 추출해서 분석에 활용하려고 합니다. mpg 데이터에서 class(자동차 종류), cty(도시 연비) 변수를 추출해 새로운 데이터를 만드세요. 새로 만든 데이터의 일부를 출력해서 두 변수로만 구성되어 있는지 확인하세요.
```{r}
mpg5 <- mpg %>%
select(class,cty)
head(mpg5)
```
5. 자동차 종류에 따라 도시 연비가 다른지 알아보려고 합니다. ​
앞에서 추출한 데이터를 이용해서 class(자동차 종류)가 "suv"인 자동차와 "compact"인 자동차 중 어떤 자동차의 cty(도시 연비)가 더 높은지 알아보세요.
```{r}
mpg6 <- mpg5 %>%
filter(class=='suv'|class=='compact') %>%
summarise(group_by(class), cty_avg=mean(cty))
mpg6
mpg6 <- mpg5 %>%
filter(class=='suv'|class=='compact') %>%
summarise(group_by(class), cty_avg=mean(cty))
mpg6
mpg6 <- mpg5 %>%
filter(class=='suv'|class=='compact')
mpg6
mpg6 <- mpg5 %>%
filter(class=='suv'|class=='compact') %>%
group_by(class)
mpg6
mpg6 <- mpg5 %>%
filter(class=='suv'|class=='compact') %>%
summarise(cty_avg=mean(cty))
mpg6
mpg6 <- mpg5 %>%
filter(class=='suv'|class=='compact') %>%
summarise(group_by(mpg5, class), cty_avg=mean(cty))
mpg6
mpg6 <- mpg5 %>%
group_by(class) %>%
summarise(cty_avg=mean(cty)) %>%
filter(class=='suv'|class=='compact')
mpg6
mpg6 <- mpg5 %>%
summarise(cty_avg=mean(cty)) %>%
filter(class=='suv'|class=='compact')
mpg6
mpg6 <- mpg5 %>%
group_by(class) %>%
summarise(cty_avg=mean(cty)) %>%
filter(class=='suv'|class=='compact')
mpg6
mpg6 <- mpg5 %>%
summarise(cty_avg=mean(cty)) %>%
filter(class=='suv'|class=='compact')
mpg6
mpg6 <- mpg5 %>%
summarise(cty_avg=mean(cty)) %>%
filter(class=='suv'|class=='compact')
mpg6
mpg6 <- mpg5 %>%
group_by(class) %>%
summarise(cty_avg=mean(cty)) %>%
filter(class=='suv'|class=='compact')
mpg6
mpg7 <- mpg %>%
filter(manufacturer=='audi') %>%
mpg7
mpg7 <- mpg %>%
filter(manufacturer=='audi') %>%
mpg7
mpg7 <- mpg %>%
filter(manufacturer=='audi')
mpg7
mpg7 <- mpg %>%
filter(manufacturer=='audi') %>%
group_by(model)
mpg7
gapminder
asia_pop <- gapminder %>%
filter(continent == 'Asia')
summarise(group_by(asia_pop, country), life_avg=mean(lifeExp))
arrange(mpg7,hwy)
mpg7 <- mpg %>%
filter(manufacturer=='audi')
arrange(mpg7,hwy)
```{r}
mpg7 <- mpg %>%
filter(manufacturer=='audi')
arrange(mpg7,desc(hwy))
mpg7 <- mpg %>%
filter(manufacturer=='audi')
arrange(mpg7,desc(hwy))
arrange(mpg7,desc(hwy)) %>% head(5)
mpg7 <- mpg %>%
filter(manufacturer=='audi')
arrange(mpg7,desc(hwy)) %>%
select(manufacturer, model, hwy) %>%
head(5)
mpg8 <- mpg
mpg8$total <- mpg8$cty + mpg8$hwy # 1
mpg8$avg_total <- mpg8$total / 2 # 2
arrange(mpg8, avg_total)
mpg8 <- mpg
mpg8$total <- mpg8$cty + mpg8$hwy # 1
mpg8$avg_total <- mpg8$total / 2 # 2
arrange(mpg8, desc(avg_total)) %>%
head(5)
arrange(mpg8, desc(avg_total)) %>%
head(3)
mpg9 <- summarise(group_by(mpg, class), cty_avg=mean(cty))
mpg
mpg9
arrange(mpg9,desc(cty_avg))
mpg10 <- summarise(group_by(mpg,manufacturer), hwy_avg=mean(hwy)) %>%
arrange(desc(hwy_avg)) %>%
head(5)
mpg10
mpg10 <- summarise(group_by(mpg,manufacturer), hwy_avg=mean(hwy)) %>%
arrange(desc(hwy_avg)) %>%
head(3)
mpg10
mpg11$compac <- ifelse(mpg11$class=='compact',T,F)
mpg11 <- mpg
mpg11$compac <- ifelse(mpg11$class=='compact',T,F)
mpg11 %>%
filter(class=='compact') %>%
summarise(group_by(manufacturer),compact_num=sum(compac))
mpg11 <- mpg
mpg11$compac <- ifelse(mpg11$class=='compact',T,F)
mpg11 %>%
filter(class=='compact') %>%
summarise(group_by(manufacturer),compact_num=sum(compac))
mpg11 <- mpg
mpg11$compac <- ifelse(mpg11$class=='compact',T,F)
mpg11 %>%
filter(class=='compact') %>%
summarise(group_by(manufacturer),compact_num=sum(compac))
summarise(mpg11,group_by(manufacturer),compact_num=sum(compac))
mpg11 <- mpg
mpg11$compac <- ifelse(mpg11$class=='compact',T,F)
mpg11 <- filter(mpg11,class=='compact')
summarise(mpg11,group_by(manufacturer),compact_num=sum(compac))
summarise(group_by(mpg11, manufacturer),compact_num=sum(compac))
mpg %>%
mutate(total=cty+hwy,avg_total=total/2) %>%
arrange(desc(avg_total)) %>%
head(5)
mpg %>%
mutate(total=cty+hwy,avg_total=total/2) %>%
arrange(desc(avg_total)) %>%
head(3)
mpg1 <- mpg %>% filter(displ <= 4) %>%
summarise(hwy_avg=mean(hwy))
mpg2 <- mpg %>% filter(displ >= 5) %>%
summarise(hwy_avg=mean(hwy))
mpg1
mpg2
mpg4 <- mpg %>%
group_by(manufacturer) %>%
filter(manufacturer=='chevrolet'|manufacturer=='ford'|manufacturer=='honda') %>%
summarise(hwy_avg=mean(hwy))
mpg4
mpg6
mean(mpg4$hwy_avg)
